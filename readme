

                      _          _ _
                     | |        | | |  _
  _ __ ___  _   _ ___| |__   ___| | | (_)
 | '_ ` _ \| | | / __| '_ \ / _ \ | |
 | | | | | | |_| \__ \ | | |  __/ | |  _
 |_| |_| |_|\__, |___/_| |_|\___|_|_| (_)
             __/ |
            |___/

Welcome to oisinhenry/myshell
A simple shell written in python.

COMMANDS
The shell supports the following internal commands:

  cd <directory> - change the current directory to <directory>. If no arguments are supplied, return the current directory.

  clr - clear the screen.

  dir <directory> - list the contents of directory <directory>.

  environ - list all the environment variables.

  echo <comment> - display <comment> on the display followed by a new line.

  help <command> - displays help for <command>. if no arguments are supplied, displays the user manual.

  pause - pauses operation of the shell until the user presses enter.

  quit - exits the shell.


PROGRAM INVOCATION
All other command line input is interpreted as program invocation. Programs and external UNIX commands will be executed by the shell.

SHELL ARGUMENTS
If the shell is invoked with a command line argument, it will assume the argument is a batch file containing a list of commands which the shell will attempt to execute.
When end of file is reached, the shell will exit.
If the shell is invoked without command line arguments it will solicit input from the user as normal.

INPUT/OUTPUT REDIRECTION
The shell supports I/O redirection using ">" and ">>".
Programs and external UNIX commands can be invoked using this syntax to output to text files.

  ">" - Creates a new file or overwrites if it exists.

  ">>" - Creates a new file or appends if it exists.

  Example:
  echo hello world > hello.txt
  - Creates a new file entitled "hello.txt" whose contents are "hello world".
  Use the ">>" syntax to append output to existing files.

BACKGROUND EXECUTION
The shell supports background execution of programs and external UNIX commands. Suffix any command with the ampersand ("&") to denote background execution.

  Usage:
  ls -l &
  

